1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "redis.fullname" . }}-service)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo redis://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "redis.fullname" . }}-service'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "redis.fullname" . }}-service --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo redis://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "redis.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Redis is accessible at {{ include "redis.fullname" . }}-service:{{ .Values.service.port }}"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME {{ .Values.service.port }}:{{ .Values.redis.port }}
{{- end }}

2. Redis Connection Details:
   Host: {{ include "redis.fullname" . }}-service
   Port: {{ .Values.service.port }}
   {{- if .Values.redis.password }}
   Password: {{ .Values.redis.password }}
   {{- else }}
   Password: (none)
   {{- end }}

3. Connect to Redis:
   kubectl exec -it $(kubectl get pods -l "app.kubernetes.io/name={{ include "redis.name" . }}" -o jsonpath="{.items[0].metadata.name}") -- redis-cli
   {{- if .Values.redis.password }}
   kubectl exec -it $(kubectl get pods -l "app.kubernetes.io/name={{ include "redis.name" . }}" -o jsonpath="{.items[0].metadata.name}") -- redis-cli -a {{ .Values.redis.password }}
   {{- end }}

4. Test Redis:
   kubectl exec -it $(kubectl get pods -l "app.kubernetes.io/name={{ include "redis.name" . }}" -o jsonpath="{.items[0].metadata.name}") -- redis-cli SET test "Hello Redis"
   kubectl exec -it $(kubectl get pods -l "app.kubernetes.io/name={{ include "redis.name" . }}" -o jsonpath="{.items[0].metadata.name}") -- redis-cli GET test
