server:
  port: 8082

spring:
  application:
    name: order-service

  # MySQL Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/microservices_db}
    username: ${SPRING_DATASOURCE_USERNAME:microservices_user}
    password: ${SPRING_DATASOURCE_PASSWORD:microservices_pass}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  # Redis Configuration
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

# Product Service URL
product-service:
  url: ${PRODUCT_SERVICE_URL:http://localhost:8081/api/products}

logging:
  level:
    com.example.orderservice: DEBUG
    org.springframework.web: DEBUG
    org.springframework.data.redis: DEBUG

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
  packages-to-scan: com.example.orderservice.controller
